# Docker MCP Configuration
# Auto-generated by Ansible on {{ timestamp }}

hosts:
{% for host_result in successful_hosts %}
{% set host_data = hostvars[host_result.host_id] %}
  {{ host_result.host_id }}:
    hostname: "{{ host_result.hostname }}"
    user: "{{ host_data.ansible_user }}"
    port: {{ host_data.ansible_port }}
    identity_file: "{{ ssh_key_path }}"
    description: "Auto-imported via Ansible on {{ timestamp }}"
    tags: 
      - "ansible-managed"
      - "auto-discovered"
{% if host_result.docker_available %}
      - "docker-enabled"
{% endif %}
{% if host_result.zfs_available %}
      - "zfs"
{% endif %}
{% if host_data.docker_mcp_tags is defined %}
{% for tag in host_data.docker_mcp_tags %}
      - "{{ tag }}"
{% endfor %}
{% endif %}
    enabled: true
{% if host_result.compose_paths and host_result.compose_paths | length > 0 %}
    compose_path: "{{ host_result.compose_paths[0] | dirname }}"
{% endif %}
{% if host_result.appdata_paths and host_result.appdata_paths | length > 0 %}
{% set appdata_candidates = host_result.appdata_paths | select('match', '^/(?:opt|srv|mnt|data)/.*') | list %}
{% if appdata_candidates %}
    appdata_path: "{{ appdata_candidates[0] | regex_replace('/[^/]+$', '') }}"
{% endif %}
{% endif %}
{% if host_result.zfs_available %}
    zfs_capable: true
{% if host_result.appdata_paths and host_result.appdata_paths | length > 0 %}
    zfs_dataset: "{{ host_result.appdata_paths[0].split('/')[1] }}/appdata"
{% endif %}
{% endif %}

{% endfor %}